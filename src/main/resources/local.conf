include "application"

akka {
  remote {
    netty.tcp {
      hostname = ${app.cluster.hostname}
      port = ${app.cluster.port}
    }

    artery {
      # change this to enabled=on to use Artery instead of netty
      # see https://doc.akka.io/docs/akka/current/remoting-artery.html
      enabled = off
      transport = tcp
      canonical.hostname = ${app.cluster.hostname}
      canonical.port = ${app.cluster.port}
    }
  }

  cluster {
    # Note - Netty uses akka.tcp://addresses
    # Note - Artery uses akka://addresses
    seed-nodes = ["akka.tcp://ClusterSystem@"${app.cluster.hostname}":"${app.cluster.port}]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 10s
  }

  management {
    http {
      hostname = ${app.cluster.httpHostname}
      port = ${app.cluster.httpPort}
      route-providers += "akka.management.HealthCheckRoutes"
    }
    health-checks {
      readiness-path = "health/ready"
      liveness-path = "health/alive"
    }
    cluster {
      health-check {
        # Ready health check returns 200 when cluster membership is in the following states.
        # Intended to be used to indicate this node is ready for user traffic so Up/WeaklyUp
        # Valid values: "Joining", "WeaklyUp", "Up", "Leaving", "Exiting", "Down", "Removed"
        ready-states = ["Up", "WeaklyUp"]
      }
    }
  }

  discovery {
    method = config
  }
}

app {
  envType = "local"
  cluster {
    hostname = "127.0.0.1"
    hostname = ${?CLUSTER_IP}
    port = 2552
    port = ${?CLUSTER_PORT}
    httpHostname = "0.0.0.0"
    httpHostname = ${?HTTP_IP}
    httpPort = 8558
    httpPort = ${?HTTP_PORT}
    actorSystemName = "events-eod"
    actorSystemName = ${?ACTOR_SYSTEM_NAME}
  }
}